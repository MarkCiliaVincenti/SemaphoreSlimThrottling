<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>netstandard2.0;net6.0;net7.0;net9.0</TargetFrameworks>
		<Authors>Mark Cilia Vincenti</Authors>
		<RepositoryUrl>https://github.com/MarkCiliaVincenti/SemaphoreSlimThrottling.git</RepositoryUrl>
		<PackageProjectUrl>https://github.com/MarkCiliaVincenti/SemaphoreSlimThrottling</PackageProjectUrl>
		<Copyright>MIT</Copyright>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<Version>1.1.9</Version>
		<PackageIcon>logo.png</PackageIcon>
		<PackageReleaseNotes>Dependency update.</PackageReleaseNotes>
		<Description>A .NET Standard 2.0 library that provides a class that uses SemaphoreSlim but allows a negative initialCount. This could be used, for example, when starting to throttle requests but initially already have more concurrent requests than the maximum you want to start allowing.</Description>
		<Copyright>Â© 2024 Mark Cilia Vincenti</Copyright>
		<PackageTags>Semaphore,SemaphoreSlim,throttling,throttle,.NET Standard,netstandard</PackageTags>
		<RepositoryType>git</RepositoryType>
		<GeneratePackageOnBuild>false</GeneratePackageOnBuild>
		<AssemblyVersion>1.1.9.0</AssemblyVersion>
		<FileVersion>1.1.9.0</FileVersion>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<Nullable>enable</Nullable>
		<IsPackable>true</IsPackable>
		<EnforceCodeStyleInBuild>True</EnforceCodeStyleInBuild>
		<EnableNETAnalyzers>True</EnableNETAnalyzers>
		<AnalysisLevel>latest</AnalysisLevel>
		<SignAssembly>True</SignAssembly>
		<AssemblyOriginatorKeyFile>SemaphoreSlimThrottling.snk</AssemblyOriginatorKeyFile>
		<ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
	</PropertyGroup>

	<PropertyGroup Condition="$(DefineConstants.Contains(AOT_COMPATIBLE))">
		<IsAotCompatible>true</IsAotCompatible>
		<PublishAot>true</PublishAot>
	</PropertyGroup>

	<PropertyGroup Condition="$(DefineConstants.Contains(TRIMMING_COMPATIBLE))">
		<PublishTrimmed>true</PublishTrimmed>
		<TrimmerDefaultAction>link</TrimmerDefaultAction>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<Optimize>true</Optimize>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="DotNet.ReproducibleBuilds" PrivateAssets="All" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Backport.System.Threading.Lock">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>analyzers</IncludeAssets>
		</PackageReference>
		<Using Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net9.0'))" Alias="Lock" Include="System.Threading.Lock" />
		<Using Condition="!$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net9.0'))" Alias="Lock" Include="Backport.System.Threading.Lock" />
		<Using Alias="LockFactory" Include="Backport.System.Threading.LockFactory" />
	</ItemGroup>

	<ItemGroup>
		<None Include="..\README.md">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
		<None Include="..\logo.png">
			<Pack>True</Pack>
			<PackagePath></PackagePath>
		</None>
	</ItemGroup>

</Project>
